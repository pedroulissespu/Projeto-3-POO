/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projeto.poo.films;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import com.mycompany.projeto.poo.manipulacao.Manipulacao;

/**
 *
 * @author pedroupcm
 */
public class Devolution extends javax.swing.JFrame {
    private boolean verificaPesquisa = false;

    public Devolution() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textoNome = new javax.swing.JLabel();
        textoCPF = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCliente = new javax.swing.JTable();
        textoDias = new javax.swing.JLabel();
        botaoPesquisar = new javax.swing.JButton();
        inserirNome = new javax.swing.JTextField();
        inserirCPF = new javax.swing.JTextField();
        inserirDias = new javax.swing.JTextField();
        botaoSair = new javax.swing.JButton();
        botaoDevolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textoNome.setText("Nome :");

        textoCPF.setText("CPF :");

        tabelaCliente.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {

                },
                new String[] {
                        "Nome", "CPF", "Filme", "Pre√ßo"
                }) {
            boolean[] canEdit = new boolean[] {
                    false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaCliente);

        textoDias.setText("Data :");

        botaoPesquisar.setText("Pesquisar");
        botaoPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPesquisarActionPerformed(evt);
            }
        });

        botaoSair.setText("Sair");
        botaoSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSairActionPerformed(evt);
            }
        });

        botaoDevolver.setText("Devolver");
        botaoDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDevolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 385,
                                                Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(textoNome)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(inserirNome))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(textoCPF)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(inserirCPF))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout
                                                .createSequentialGroup()
                                                .addComponent(botaoDevolver)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(botaoSair))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(botaoPesquisar)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(textoDias)
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(inserirDias,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 81,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap()));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(textoNome)
                                        .addComponent(inserirNome, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(textoCPF)
                                        .addComponent(inserirCPF, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoPesquisar)
                                .addGap(4, 4, 4)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 49,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(textoDias)
                                        .addComponent(inserirDias, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(botaoSair)
                                        .addComponent(botaoDevolver))
                                .addContainerGap()));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoSairActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_botaoSairActionPerformed
        dispose();
    }// GEN-LAST:event_botaoSairActionPerformed

    private void botaoPesquisarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_botaoPesquisarActionPerformed
        if (inserirNome.getText().equals("") || inserirCPF.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos para realizar a pesquisa!");
        } else {
            File aluguel = new File(Manipulacao.DB_ALUGUEL + "aluguel.txt");
            String nome = inserirNome.getText();
            String cpf = inserirCPF.getText();
            String pesquisa = nome + "\t" + cpf + "\t";
            String preencher = "";
            String[] lines = Manipulacao.lerArquivo(aluguel).split("\n");

            for (String line : lines) {
                String aux = line.split("\t")[0] + "\t" + line.split("\t")[1] + "\t";
                if (aux.equals(pesquisa)) {
                    preencher = line.split("\t")[0] + "\t" + line.split("\t")[1] + "\t" + line.split("\t")[2] + "\t"
                            + line.split("\t")[3] + "\n";
                    break;
                }
            }

            DefaultTableModel modelo = (DefaultTableModel) tabelaCliente.getModel();

            if (modelo.getRowCount() > 0) {
                modelo.setRowCount(0);
            }

            Object[] obj = preencher.split("\t");
            modelo.addRow(obj);
            verificaPesquisa = true;
        }
    }// GEN-LAST:event_botaoPesquisarActionPerformed

    private void botaoDevolverActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_botaoDevolverActionPerformed
        if (!verificaPesquisa) {
            JOptionPane.showMessageDialog(rootPane, "Realize primeiro a pesquisa !");
        } else {
            File aluguel = new File(Manipulacao.DB_ALUGUEL + "aluguel.txt");
            String[] lines = Manipulacao.lerArquivo(aluguel).split("\n");
            String pesquisa = inserirNome.getText() + "\t" + inserirCPF.getText() + "\t";
            String remover = "";
            double preco = 0;
            int dia = 0;
            int quantidadeFilmes = 0;

            for (String line : lines) {
                String verifica = line.split("\t")[0] + "\t" + line.split("\t")[1] + "\t";
                if (verifica.equals(pesquisa)) {
                    remover = line.split("\t")[0] + "\t" + line.split("\t")[1] + "\t" + line.split("\t")[2] + "\t"
                            + line.split("\t")[3] + "\t" + line.split("\t")[4] + "\n";
                    String film = line.split("\t")[2];
                    String[] quantidadeDeFilme = film.split(",");
                    quantidadeFilmes = quantidadeDeFilme.length;
                    preco = Double.parseDouble(line.split("\t")[3].replace(",", "."));
                    dia = Integer.parseInt(line.split("\t")[4]);
                    break;
                }
            }

            String aux = "";
            for (String line : lines) {
                String verifica = line.split("\t")[0] + "\t" + line.split("\t")[1] + "\t" + line.split("\t")[2] + "\t"
                        + line.split("\t")[3] + "\t" + line.split("\t")[4] + "\n";

                if (verifica.equals(remover)) {
                    continue;
                }
                aux += line.split("\t")[0] + "\t" + line.split("\t")[1] + "\t" + line.split("\t")[2] + "\t"
                        + line.split("\t")[3] + "\t" + line.split("\t")[4] + "\n";
            }

            try {
                FileWriter fw = new FileWriter(aluguel);
                BufferedWriter bw = new BufferedWriter(fw);
                bw.write(aux);
                bw.close();
                fw.close();
            } catch (IOException e) {
                System.out.println("Falha na escrita do arquivo");
            }
            int diaDeLocacao = Integer.parseInt(inserirDias.getText());
            double precoFinal = 0;

            if (diaDeLocacao - dia > 2) {
                int diasPagar = diaDeLocacao - dia - 2;
                precoFinal = quantidadeFilmes * 1.20 * diasPagar + preco;
                precoFinal = Math.rint(precoFinal * 100.0) / 100.0;
            } else {
                precoFinal = preco;
            }

            JOptionPane.showMessageDialog(rootPane, "Devolu√ß√£o realizada com sucesso , pague um total de : R$"
                    + String.valueOf(precoFinal).replace(".", ","));
            dispose();
        }
    }// GEN-LAST:event_botaoDevolverActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void devolucaodefilme(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Devolution.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Devolution.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Devolution.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Devolution.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Devolution().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoDevolver;
    private javax.swing.JButton botaoPesquisar;
    private javax.swing.JButton botaoSair;
    private javax.swing.JTextField inserirCPF;
    private javax.swing.JTextField inserirDias;
    private javax.swing.JTextField inserirNome;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaCliente;
    private javax.swing.JLabel textoCPF;
    private javax.swing.JLabel textoDias;
    private javax.swing.JLabel textoNome;
    // End of variables declaration//GEN-END:variables
}
